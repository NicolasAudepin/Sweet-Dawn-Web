{"version":3,"sources":["utilities.js","SweetDawn.jsx","MidiOut.jsx","App.js","index.js"],"names":["drawRect","detections","ctx","forEach","prediction","x","y","width","height","text","color","Math","floor","random","toString","strokeStyle","font","beginPath","fillStyle","fillText","rect","stroke","SweetDawn","webcamRef","useRef","canvasRef","runCoco","a","cocossd","net","console","log","setInterval","detect","current","video","readyState","videoWidth","videoHeight","obj","getContext","useEffect","className","ref","muted","style","position","marginLeft","marginRight","left","right","textAlign","zindex","MidiOut","props","state","inputs","outputs","SetupMidi","bind","optionsOut","optionsIn","WebMidi","err","length","map","out","index","push","name","setTimeout","setState","this","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.577b6f5a.chunk.js","sourcesContent":["export const drawRect = (detections, ctx) =>{\n  // Loop through each prediction\n  detections.forEach(prediction => {\n\n    // Extract boxes and classes\n    const [x, y, width, height] = prediction['bbox']; \n    const text = prediction['class']; \n\n    // Set styling\n    const color = Math.floor(Math.random()*16777215).toString(16);\n    ctx.strokeStyle = '#' + color\n    ctx.font = '18px Arial';\n\n    // Draw rectangles and text\n    ctx.beginPath();   \n    ctx.fillStyle = '#' + color\n    ctx.fillText(text, x, y);\n    ctx.rect(x, y, width, height); \n    ctx.stroke();\n  });\n}\n","// Import dependencies\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\nimport * as tf from \"@tensorflow/tfjs\";\r\nimport * as cocossd from \"@tensorflow-models/coco-ssd\";\r\nimport Webcam from \"react-webcam\";\r\nimport \"./App.css\";\r\nimport { drawRect } from \"./utilities\";\r\nimport * as WebMidi from \"webmidi\"\r\n//https://github.com/djipco/webmidi\r\n    \r\nfunction SweetDawn() {\r\n  const webcamRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  let options = [];\r\n  // Main function\r\n  const runCoco = async () => {\r\n    \r\n\r\n\r\n    const net = await cocossd.load();\r\n    console.log(\"coco model loaded.\");\r\n    //  Loop and detect hands\r\n    setInterval(() => {\r\n      detect(net);\r\n    }, 10);\r\n  };\r\n\r\n  const detect = async (net) => {\r\n    \r\n    // Check data is available\r\n    if (\r\n      typeof webcamRef.current !== \"undefined\" &&\r\n      webcamRef.current !== null &&\r\n      webcamRef.current.video.readyState === 4\r\n    ) {\r\n      //console.log(webcamRef)\r\n\r\n      // Get Video Properties\r\n      const video = webcamRef.current.video;\r\n      const videoWidth = webcamRef.current.video.videoWidth;\r\n      const videoHeight = webcamRef.current.video.videoHeight;\r\n\r\n      // Set video width\r\n      webcamRef.current.video.width = videoWidth;\r\n      webcamRef.current.video.height = videoHeight;\r\n\r\n      // Set canvas height and width\r\n      canvasRef.current.width = videoWidth;\r\n      canvasRef.current.height = videoHeight;\r\n\r\n      // Make Detections\r\n      const obj = await net.detect(video);\r\n      //console.log(obj)\r\n      // Draw mesh\r\n      const ctx = canvasRef.current.getContext(\"2d\");\r\n      drawRect(obj, ctx); \r\n    }\r\n  };\r\n\r\n  useEffect(()=>{runCoco()},[]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <div>\r\n            WEBCAM\r\n\r\n        </div>\r\n        <div>\r\n          <Webcam\r\n            ref={webcamRef}\r\n            muted={true} \r\n            style={{\r\n              position: \"absolute\",\r\n              marginLeft: \"auto\",\r\n              marginRight: \"auto\",\r\n              left: 0,\r\n              right: 0,\r\n              textAlign: \"center\",\r\n              zindex: 9,\r\n              width: 640,\r\n              height: 480,\r\n            }}\r\n          />\r\n\r\n          <canvas\r\n            ref={canvasRef}\r\n            style={{\r\n              position: \"absolute\",\r\n              marginLeft: \"auto\",\r\n              marginRight: \"auto\",\r\n              left: 0,\r\n              right: 0,\r\n              textAlign: \"center\",\r\n              zindex: 8,\r\n              width: 640,\r\n              height: 480,\r\n            }}\r\n          />\r\n        </div>\r\n        \r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SweetDawn;\r\n","\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\nimport * as WebMidi from \"webmidi\";\r\nimport { Component } from 'react';\r\n\r\n\r\n\r\nclass MidiOut extends Component {\r\n    \r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        console.log(\"search box imported\");\r\n        this.state = {\r\n            inputs : [],\r\n            outputs: [],\r\n            \r\n        }\r\n     \r\n        this.SetupMidi = this.SetupMidi.bind(this);   \r\n        this.SetupMidi()\r\n    }\r\n    SetupMidi() {\r\n        let optionsOut = [];\r\n        let optionsIn = [];\r\n        WebMidi.enable(function (err) {\r\n            if (err) {\r\n                console.log(\"WebMidi could not be enabled.\", err);\r\n            } else {\r\n                console.log(\"WebMidi enabled!\");\r\n                console.log(WebMidi.inputs);\r\n                console.log(WebMidi.outputs);\r\n                console.log(WebMidi.outputs.length);\r\n                WebMidi.inputs.map((out,index) =>  optionsIn.push(<option>{WebMidi.inputs[index].name}</option>));\r\n                WebMidi.outputs.map((out,index) =>  optionsOut.push(<option>{WebMidi.outputs[index].name}</option>));\r\n                WebMidi.outputs.map((out,index) => console.log(WebMidi.outputs[index]));\r\n                WebMidi.outputs.map((out,index) => console.log(WebMidi.outputs[index].name));\r\n   \r\n    \r\n            }\r\n        });\r\n        setTimeout(() => {this.setState({ outputs: optionsOut , inputs: optionsIn});}, 3000);\r\n        \r\n    } \r\n\r\n    \r\n    render() {\r\n        const {inputs, outputs}= this.state   \r\n        return (\r\n          <div>\r\n                <p>MIDI</p>\r\n                <div>\r\n                    Input\r\n                    <select>                 \r\n                        {inputs}\r\n                    </select>\r\n                    \r\n                </div>\r\n                <div>\r\n                    Output\r\n                    <select>                 \r\n                        {outputs}\r\n                    </select>\r\n                    \r\n                </div>\r\n          </div>\r\n \r\n           )\r\n        }\r\n\r\n}\r\n\r\nexport default MidiOut;\r\n","// Import dependencies\nimport React, { useRef, useState, useEffect } from \"react\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as cocossd from \"@tensorflow-models/coco-ssd\";\nimport Webcam from \"react-webcam\";\nimport \"./App.css\";\nimport { drawRect } from \"./utilities\";\nimport * as WebMidi from \"webmidi\"\n//https://github.com/djipco/webmidi\n  \nimport SweetDawn from \"./SweetDawn\"\nimport MidiOut from \"./MidiOut\";\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <h1>SWEET DAWN</h1>\n      <MidiOut/>\n      <SweetDawn/>\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}